name: e2e-test-latest
on:
  push:
    branches: [ master ] # Run this when there's a commit push to master
  pull_request:
    branches: [ master ] # Run this for new PRs for master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20] # Enumerate the total-machines as a range, this must match the total-machines number below.
        total-machines: [20] # The number of concurrent test machines to run. You can lower this when there are only a few tests you know will run (max 20).

    steps:
    - uses: actions/checkout@v2 # Checkout the current branch (e2e).
    - uses: actions/checkout@v2 # Checkout the Stackable Free repo.
      with:
        repository: 'gambitph/Stackable' # Stackable free repo
        ref: 'fix/performance' # Branch to checkout
        path: 'Stackable'
    - uses: actions/checkout@v2 # Checkout the Stackable Premium repo.
      with:
        repository: 'bfintal/Stackable-Premium' # Stackable premium repo
        ref: 'develop' # Branch to checkout
        path: 'Stackable/pro__premium_only'
        token: '${{ secrets.ACCESS_KEY }}' # ACCESS_KEY is stored in this repo's secrets for the workflow to be able to checkout the repo, it's a Personal access tokens generated by the repository owner (bfintal) in developer settings

    # Change the PHP version to v7.4.1
    - name: Setup PHP v7.4.1
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4.1'

    # Check the current PHP version installed
    - name: Check PHP version
      run: php -v

    # Install all dependencies from composer.json
    - name: Install dependencies
      working-directory: Stackable
      run: |
        composer require wp-phpunit/wp-phpunit --dev
        composer require roots/wordpress --dev
        composer install --prefer-dist --no-progress
    # Install all dependencies from composer.json
    - name: Install dependencies in premium
      working-directory: Stackable/pro__premium_only
      run: |
        composer require wp-phpunit/wp-phpunit --dev
        composer require roots/wordpress --dev
        composer install --prefer-dist --no-progress
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Install @wordpress/env
      run: npm install -g @wordpress/env

    - name: Build Stackable Premium
      run: |
        cd Stackable
        npm ci
        cd pro__premium_only
        npm ci
        npm run build --if-present
    - name: Remove .wp-env.override.json
      run: rm .wp-env.override.json

    - name: Run WordPress Environment
      run: wp-env start

    - name: Run Test Suite
      uses: cypress-io/github-action@v2
      with:
        command: npm run cy:run:parallel -- --machine-number=${{ matrix.containers }} --total-machines=${{ matrix.total-machines }} --spec=cypress/integration/v3/**/*.spec.js --headed --browser=chrome --env=STACKABLE_PREMIUM_CODE=${{ secrets.STACKABLE_PREMIUM_CODE }},GITHUB_ACTIONS=1 --config=baseUrl=http://localhost:8889
        # STACKABLE_PREMIUM_CODE contains a premium license key for Stackable Premium

    - name: Upload E2E Test Results
      uses: actions/upload-artifact@v2
      with:
        name: e2e-test-results-${{ matrix.containers }}
        path: cypress/results/e2e-test-results.xml

  publish-test-results:
    name: Publish E2E Test Results
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Publish E2E Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      with:
        files: artifacts/**/*.xml
        check_name: E2E Test Results
